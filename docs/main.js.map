{
  "version": 3,
  "sources": ["../main.js"],
  "sourcesContent": ["const categories = require('./categories.json')\n\nconst categoryNames = categories\n\n\nlet currentCategory = []\nconst letters = 'abcdefghijklmnopqrstuvwxyz'\nlet score = 0\n\nlet options = {\n  autoGuess: true\n}\n\nwindow.onload = function () {\n  const picker = document.getElementById('category-picker')\n\n  // Populate categories select\n  for (const i in categoryNames) {\n    const category = categoryNames[i]\n    const select = document.createElement('option')\n    select.value = category\n    const text = document.createTextNode(category)\n    select.appendChild(text)\n    picker.appendChild(select)\n  }\n\n  // Make sure state is matched\n  document.getElementById(\"auto-guess\").checked = options.autoGuess\n\n  // Bind things\n  document.getElementById(\"guess\").addEventListener(\"keydown\", (() => {\n    if (event.key === 'Enter') makeGuess()\n  }))\n\n  document.getElementById(\"guess\").addEventListener(\"input\", (() => {\n    if (options.autoGuess) makeGuess()\n  }))\n\n  document.getElementById(\"auto-guess\").addEventListener(\"click\", (() => {\n    options.autoGuess = !options.autoGuess\n  }))\n}\n\n// Takes a category name and requests and loads that json\nwindow.download_category = async function (category) {\n  try {\n    const response = await fetch(category + '.json');\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching JSON:', error);\n    return null; // or handle the error in some other way\n  }\n}\n\nwindow.load = function (category) {\n\n  currentLetter = 0\n  score = 0\n\n  download_category(category)\n    .then(data => {\n      currentCategory = data\n      console.log(data)\n    })\n\n  document.getElementById('category').innerText = category\n  document.getElementById('category-backdrop').classList.toggle('hidden')\n}\n\nfunction reset () {\n  currentLetter = 0\n  score = 0\n}\n\n/**\n * Last letter was guessed, so the game is over\n */\nfunction finish () {\n  window.alert('win' + score)\n  reset()\n}\n\n/**\n *\n * Moves onto the next letter of the alphabet\n * @param {boolean} earned - If the letter was earned or skipped\n */\nfunction increment (earned) {\n  // If on last letter\n  if (currentLetter === 25) {\n    // Win\n    finish()\n  } else {\n    // Move on one category\n    currentLetter++\n\n    // Clear the input\n    document.getElementById('guess').value = ''\n\n    // Make sure the next category have valid guesses\n    while (currentCategory[currentLetter].length === 0) {\n      currentLetter++\n      if (currentLetter > 25) {\n        finish()\n      }\n    }\n  }\n\n  // If it was earned, not skipped\n  if (earned) {\n    score++\n  }\n\n  document.getElementById('letter').innerHTML = letters[currentLetter]\n}\n\n// Think this is a really outdated way of doing it\n// But it works so I'm not gonna change it\nwindow.increment = increment\n\nfunction makeGuess (autoGuess) {\n  // Store guess in const\n  const guess = document.getElementById('guess').value.toLowerCase()\n\n  // Test if guess is right\n  if (currentCategory[currentLetter].indexOf(guess) !== -1) {\n    increment(true)\n  }\n}\nwindow.makeGuess = makeGuess\n"],
  "mappings": "0HAAA,GAAM,GAAa,IAEb,EAAgB,EAGlB,EAAkB,GAChB,EAAU,6BACZ,EAAQ,EAER,EAAU,CACZ,UAAW,IAGb,OAAO,OAAS,UAAY,CAC1B,GAAM,GAAS,SAAS,eAAe,mBAGvC,OAAW,KAAK,GAAe,CAC7B,GAAM,GAAW,EAAc,GACzB,EAAS,SAAS,cAAc,UACtC,EAAO,MAAQ,EACf,GAAM,GAAO,SAAS,eAAe,GACrC,EAAO,YAAY,GACnB,EAAO,YAAY,GAIrB,SAAS,eAAe,cAAc,QAAU,EAAQ,UAGxD,SAAS,eAAe,SAAS,iBAAiB,UAAY,IAAM,CAClE,AAAI,MAAM,MAAQ,SAAS,MAG7B,SAAS,eAAe,SAAS,iBAAiB,QAAU,IAAM,CAChE,AAAI,EAAQ,WAAW,MAGzB,SAAS,eAAe,cAAc,iBAAiB,QAAU,IAAM,CACrE,EAAQ,UAAY,CAAC,EAAQ,aAKjC,OAAO,kBAAoB,eAAgB,EAAU,CACnD,GAAI,CAGF,MADa,MAAM,AADF,MAAM,OAAM,EAAW,UACZ,aAErB,EAAP,CACA,eAAQ,MAAM,uBAAwB,GAC/B,OAIX,OAAO,KAAO,SAAU,EAAU,CAEhC,cAAgB,EAChB,EAAQ,EAER,kBAAkB,GACf,KAAK,GAAQ,CACZ,EAAkB,EAClB,QAAQ,IAAI,KAGhB,SAAS,eAAe,YAAY,UAAY,EAChD,SAAS,eAAe,qBAAqB,UAAU,OAAO,WAGhE,YAAkB,CAChB,cAAgB,EAChB,EAAQ,EAMV,YAAmB,CACjB,OAAO,MAAM,MAAQ,GACrB,IAQF,WAAoB,EAAQ,CAE1B,GAAI,gBAAkB,GAEpB,QASA,KANA,gBAGA,SAAS,eAAe,SAAS,MAAQ,GAGlC,EAAgB,eAAe,SAAW,GAC/C,gBACI,cAAgB,IAClB,IAMN,AAAI,GACF,IAGF,SAAS,eAAe,UAAU,UAAY,EAAQ,eAKxD,OAAO,UAAY,EAEnB,WAAoB,EAAW,CAE7B,GAAM,GAAQ,SAAS,eAAe,SAAS,MAAM,cAGrD,AAAI,EAAgB,eAAe,QAAQ,KAAW,IACpD,EAAU,IAGd,OAAO,UAAY",
  "names": []
}
