{
  "version": 3,
  "sources": ["../main.js"],
  "sourcesContent": ["const categories = require('./categories.json')\r\n\r\nconst categoryNames = categories\r\n\r\n\r\nlet currentCategory = []\r\nconst letters = 'abcdefghijklmnopqrstuvwxyz'\r\nlet score = 0\r\n\r\nlet options = {\r\n  autoGuess: false\r\n}\r\n\r\nwindow.onload = function () {\r\n  const picker = document.getElementById('category-picker')\r\n\r\n  // Populate categories select\r\n  for (const i in categoryNames) {\r\n    const category = categoryNames[i]\r\n    const select = document.createElement('option')\r\n    select.value = category\r\n    const text = document.createTextNode(category)\r\n    select.appendChild(text)\r\n    picker.appendChild(select)\r\n  }\r\n\r\n  // Bind things\r\n  document.getElementById(\"guess\").onkeydown = guessDown\r\n  document.getElementById(\"auto-guess\").onclick = (() => {\r\n    options.autoGuess = !options.autoGuess\r\n  })\r\n}\r\n\r\n// Takes a category name and requests and loads that json\r\nwindow.download_category = async function (category) {\r\n  try {\r\n    const response = await fetch(category + '.json');\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching JSON:', error);\r\n    return null; // or handle the error in some other way\r\n  }\r\n}\r\n\r\nwindow.load = function (category) {\r\n\r\n  currentLetter = 0\r\n  score = 0\r\n\r\n  download_category(category)\r\n    .then(data => {\r\n      currentCategory = data\r\n      console.log(data)\r\n    })\r\n  document.getElementById('category').innerText = category\r\n  document.getElementById('category-backdrop').classList.toggle('hidden')\r\n}\r\n\r\nwindow.guessDown = function (event) {\r\n  console.log(event)\r\n  if (event.key === 'Enter') makeGuess()\r\n\r\n  if (options.autoGuess) {\r\n    makeGuess()\r\n  }\r\n}\r\n\r\n\r\nfunction reset () {\r\n  currentLetter = 0\r\n  score = 0\r\n}\r\n\r\n\r\n/**\r\n * Last letter was guessed, so the game is over\r\n */\r\nfunction finish () {\r\n  window.alert('win' + score)\r\n  reset()\r\n}\r\n\r\n\r\n/**\r\n *\r\n * Moves onto the next letter of the alphabet\r\n * @param {boolean} earned - If the letter was earned or skipped\r\n */\r\nfunction increment (earned) {\r\n  // If on last letter\r\n  if (currentLetter === 25) {\r\n    // Win\r\n    finish()\r\n  } else {\r\n    // Move on one category\r\n    currentLetter++\r\n\r\n    // Make sure the next category have valid guesses\r\n    while (currentCategory[currentLetter].length === 0) {\r\n      currentLetter++\r\n      if (currentLetter > 25) {\r\n        finish()\r\n      }\r\n    }\r\n  }\r\n\r\n  // If it was earned, not skipped\r\n  if (earned) {\r\n    score++\r\n  }\r\n\r\n  document.getElementById('letter').innerHTML = letters[currentLetter]\r\n}\r\n\r\nwindow.increment = increment\r\n\r\nfunction makeGuess (autoGuess) {\r\n  // Store guess\r\n  const guess = document.getElementById('guess').value.toLowerCase()\r\n\r\n  // Test if guess is right\r\n  if (currentCategory[currentLetter].indexOf(guess) !== -1) {\r\n    increment(true)\r\n    // Clear the input\r\n    document.getElementById('guess').value = ''\r\n  }\r\n}\r\nwindow.makeGuess = makeGuess\r\n"],
  "mappings": "0HAAA,GAAM,GAAa,IAEb,EAAgB,EAGlB,EAAkB,GAChB,EAAU,6BACZ,EAAQ,EAER,EAAU,CACZ,UAAW,IAGb,OAAO,OAAS,UAAY,CAC1B,GAAM,GAAS,SAAS,eAAe,mBAGvC,OAAW,KAAK,GAAe,CAC7B,GAAM,GAAW,EAAc,GACzB,EAAS,SAAS,cAAc,UACtC,EAAO,MAAQ,EACf,GAAM,GAAO,SAAS,eAAe,GACrC,EAAO,YAAY,GACnB,EAAO,YAAY,GAIrB,SAAS,eAAe,SAAS,UAAY,UAC7C,SAAS,eAAe,cAAc,QAAW,IAAM,CACrD,EAAQ,UAAY,CAAC,EAAQ,YAKjC,OAAO,kBAAoB,eAAgB,EAAU,CACnD,GAAI,CAGF,MADa,MAAM,AADF,MAAM,OAAM,EAAW,UACZ,aAErB,EAAP,CACA,eAAQ,MAAM,uBAAwB,GAC/B,OAIX,OAAO,KAAO,SAAU,EAAU,CAEhC,cAAgB,EAChB,EAAQ,EAER,kBAAkB,GACf,KAAK,GAAQ,CACZ,EAAkB,EAClB,QAAQ,IAAI,KAEhB,SAAS,eAAe,YAAY,UAAY,EAChD,SAAS,eAAe,qBAAqB,UAAU,OAAO,WAGhE,OAAO,UAAY,SAAU,EAAO,CAClC,QAAQ,IAAI,GACR,EAAM,MAAQ,SAAS,IAEvB,EAAQ,WACV,KAKJ,YAAkB,CAChB,cAAgB,EAChB,EAAQ,EAOV,YAAmB,CACjB,OAAO,MAAM,MAAQ,GACrB,IASF,WAAoB,EAAQ,CAE1B,GAAI,gBAAkB,GAEpB,QAMA,KAHA,gBAGO,EAAgB,eAAe,SAAW,GAC/C,gBACI,cAAgB,IAClB,IAMN,AAAI,GACF,IAGF,SAAS,eAAe,UAAU,UAAY,EAAQ,eAGxD,OAAO,UAAY,EAEnB,WAAoB,EAAW,CAE7B,GAAM,GAAQ,SAAS,eAAe,SAAS,MAAM,cAGrD,AAAI,EAAgB,eAAe,QAAQ,KAAW,IACpD,GAAU,IAEV,SAAS,eAAe,SAAS,MAAQ,IAG7C,OAAO,UAAY",
  "names": []
}
